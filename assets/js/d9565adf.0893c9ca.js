"use strict";(self.webpackChunkprojects_ieeebruins_com=self.webpackChunkprojects_ieeebruins_com||[]).push([[484],{4574:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var t=i(5893),s=i(1151),r=i(2991);const o={},l="WRAP",a={id:"WRAP/README",title:"WRAP",description:"Overview",source:"@site/docs/WRAP/README.mdx",sourceDirName:"WRAP",slug:"/WRAP/",permalink:"/WRAP/",draft:!1,unlisted:!1,editUrl:"https://github.com/UCLA-IEEE/projects.ieeebruins.com/tree/main/docs/WRAP/README.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Lab 5",permalink:"/DAV/lab-5"},next:{title:"Module 1",permalink:"/WRAP/module-1"}},c={},d=[{value:"Overview",id:"overview",level:2},{value:"Content",id:"content",level:2}];function h(e){const n={h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"wrap",children:"WRAP"}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"At a high level, you will do just about everything needed to get a string of bits from one microcontroller to another, without any wires between the two (and at 27MHz!). This means writing the code to encode a digital signal onto an analog carrier wave, designing and building the transmitter and receiver boards for this RF signal, and finally the code to decode it back into a (hopefully) error-free digital signal."}),"\n",(0,t.jsx)(n.p,{children:"In WRAP you will be able to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Understand RF systems: how to work with and design things at the system level"}),"\n",(0,t.jsx)(n.li,{children:"Designing RF amplifiers, mixers and filters"}),"\n",(0,t.jsx)(n.li,{children:"Building those yourself (including winding your own transformers!)"}),"\n",(0,t.jsx)(n.li,{children:"Using ADCs and DACs to sample RF signals"}),"\n",(0,t.jsx)(n.li,{children:"Designing and implementing a digital communication system"}),"\n",(0,t.jsx)(n.li,{children:"Tools you'll get comfortable with: LTSpice, Matlab, STM CubeIDE, embedded C, PCB layout tools (Autodesk Eagle), RF bench equipment (oscilloscope, vector network analyzer, spectrum analyzer, etc.)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"An alternative form of learning to these modules are the UCLA IEEE lecture videos. We highly recommend watching them if you have any doubts as you read through the modules, or if you just want to watch a lecture video instead of going through the modules yourself. Just note that there will be other things talked about in the videos that would be related to the overall project at UCLA\u2019s IEEE branch."}),"\n",(0,t.jsx)(r.Z,{}),"\n",(0,t.jsx)(n.h2,{id:"content",children:"Content"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)("ins",{children:"Introduction to RF & Analog Circuits:"})})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Overview of 102 materials, general circuit theory (frequency response, two-ports, non-idealities) and how they affect our signal integrity and transmission."}),"\n",(0,t.jsx)(n.li,{children:"Briefly cover operation physics of resistors, capacitors, inductors, diodes and transistors."}),"\n",(0,t.jsx)(n.li,{children:"Brief Transmission Line theory."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)("ins",{children:"An Introduction to RF System Design:"})})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Block-view of our RF system & general design considerations."}),"\n",(0,t.jsx)(n.li,{children:"Deeper dive into our goal and how it can be achieved."}),"\n",(0,t.jsx)(n.li,{children:"Introduces dedicated blocks that we will need (Amplifiers, Mixers, Oscillators, Filters, Buffers, Matching networks)."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)("ins",{children:"Active Elements: A Dive Into Transistor Circuits"})})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Cover Class A amplifiers and buffers & transistor biasing."}),"\n",(0,t.jsx)(n.li,{children:"Input and Output impedance for impedance matching & signal path modifications (bypass/decoupling caps)."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)("ins",{children:"Frequency Scaling & Isolation:"})})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Cover mixers and oscillators and why we need them (to upconvert and downconvert frequencies)."}),"\n",(0,t.jsx)(n.li,{children:"Learn about the diode ring mixer and colpitts oscillator that we will use in the project."}),"\n",(0,t.jsx)(n.li,{children:"Relate the transistors input characteristics to the operation of our colpitts oscillator."}),"\n",(0,t.jsx)(n.li,{children:"Bandpass, Lowpass, Highpass, Bandstop filters for isolation of signals of interest."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)("ins",{children:"Impedance Matching:"})})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Deeper look into Transmission Line theory and matching networks such as T-pad attenuators and LC matching networks."}),"\n",(0,t.jsx)(n.li,{children:"Why we use these techniques and when (protect our microcontrollers from reflections, want as much power transfer from stage to stage, etc)."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)("ins",{children:"More Advanced Design Procedures:"})})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Active Filters with op-amps (provide the same \u201cfiltering\u201d that the passive LC filters from before do, but also add gain)."}),"\n",(0,t.jsx)(n.li,{children:"S-Parameters for amplifier design & stability to maximize gain (ADS)."}),"\n",(0,t.jsx)(n.li,{children:"Low-Noise Amplifier on the input of the Receiver side to set Noise Floor (Friis Equation)."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},2991:(e,n,i)=>{i.d(n,{Z:()=>x});i(7294);var t=i(512),s=i(2802),r=i(9960),o=i(3919),l=i(5999),a=i(2503);const c={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var d=i(5893);function h({href:e,children:n}){return(0,d.jsx)(r.Z,{href:e,className:(0,t.Z)("card padding--lg",c.cardContainer),children:n})}function u({href:e,icon:n,title:i,description:s}){return(0,d.jsxs)(h,{href:e,children:[(0,d.jsxs)(a.Z,{as:"h2",className:(0,t.Z)("text--truncate",c.cardTitle),title:i,children:[n," ",i]}),s&&(0,d.jsx)("p",{className:(0,t.Z)("text--truncate",c.cardDescription),title:s,children:s})]})}function m({item:e}){const n=(0,s.LM)(e);return n?(0,d.jsx)(u,{href:n,icon:"\ud83d\uddc3\ufe0f",title:e.label,description:e.description??(0,l.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:e.items.length})}):null}function p({item:e}){const n=(0,o.Z)(e.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",i=(0,s.xz)(e.docId??void 0);return(0,d.jsx)(u,{href:e.href,icon:n,title:e.label,description:e.description??i?.description})}function g({item:e}){switch(e.type){case"link":return(0,d.jsx)(p,{item:e});case"category":return(0,d.jsx)(m,{item:e});default:throw new Error(`unknown item type ${JSON.stringify(e)}`)}}function f({className:e}){const n=(0,s.jA)();return(0,d.jsx)(x,{items:n.items,className:e})}function x(e){const{items:n,className:i}=e;if(!n)return(0,d.jsx)(f,{...e});const r=(0,s.MN)(n);return(0,d.jsx)("section",{className:(0,t.Z)("row",i),children:r.map(((e,n)=>(0,d.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,d.jsx)(g,{item:e})},n)))})}},1151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>o});var t=i(7294);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);